@using Newtonsoft.Json;
@model IEnumerable<TrackMED.Models.ProviderOfService>

@{
    ViewBag.Title = "Index: Service Providers";
}

<h2>SERVICE PROVIDERS</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<div id="example_wrapper" class="dataTables_wrapper form-inline dt-bootstrap no-footer">
    <div class="row">
        <table id="nestedTable" class="table-light table-striped table-condensed table-hover dataTable no-footer" cellspacing="0" width="100%" role="grid" aria-describedby="DataTables_Table_1_info" style="width: 100%;">
            <thead>
                <tr role="row">
                    <th class="details-control sorting_disabled" rowspan="1" colspan="1" aria-label="" style="width: 9px;"></th>
                    <th class="sorting" tabindex="0" aria-controls="DataTables_Table_1" rowspan="1" colspan="1">@Html.DisplayNameFor(model => model.Desc)</th>
                    <th class="sorting" tabindex="0" aria-controls="DataTables_Table_1" rowspan="1" colspan="1">@Html.DisplayNameFor(model => model.CreatedAtUtc)</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="myTable">
                @foreach (var item in Model)
                {
                    var tableName = " " + item.GetType();
                    var itemJs = JsonConvert.SerializeObject(item);

                    <tr role="row" rel="@item.Id@tableName">
                        <td class="details-control glyphicon glyphicon-plus"></td>
                        <td>@Html.DisplayFor(modelItem => item.Desc)</td>
                        <td>@Html.DisplayFor(modelItem => item.CreatedAtUtc)</td>
                        <td>
                            <a href="#!" rel="@itemJs" onclick="editRecord(this, 'ServiceProviders')" class="editDialog">Edit</a> |
                            <a href="#!" rel="@item.Id" onclick="deleteRecord(this, 'ServiceProviders')">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@Html.Partial("_IndexPartial", Model)
